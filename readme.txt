	-----------------
	变量定义：
	eg：your_name="runoob.com"
	变量与等号之间不可以有空格
	-----------------
	使用变量时，在前面加"$"
	------------------
	定义只读变量，使用readonly命令
	eg： 	var="lumos"
		readonly var
	即可
	-----------------
	删除变量使用unset
	eg：	unset var
	-----------------
	字符串，尽量使用双引号
	----------------
	bash支持一维数组
	eg：array=(
	value0
	value1
	value2
	value3
	)
	------------------
	# 为注释符
	-----------------
	参数传递：
	$# 	传递到脚本的参数个数
	$* 	以一个单字符串显示所有向脚本传递的参数。
		如"$*"用「"」括起来的情况、以"$1 $2 … $n"的形式输出所有参数。
	$$ 	脚本运行的当前进程ID号
	$! 	后台运行的最后一个进程的ID号
	$@ 	与$*相同，但是使用时加引号，并在引号中返回每个参数。
		如"$@"用「"」括起来的情况、以"$1" "$2" … "$n" 的形式输出所有参数。
	$- 	显示Shell使用的当前选项，与set命令功能相同。
	$? 	显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。
	---------------------
	算数运算符：
	下表列出了常用的算术运算符，假定变量 a 为 10，变量 b 为 20：

	运算符 	说明 						举例
	+ 	加法 						`expr $a + $b` 结果为 30。
	- 	减法 						`expr $a - $b` 结果为 -10。
	* 	乘法 						`expr $a \* $b` 结果为  200。
	/ 	除法 						`expr $b / $a` 结果为 2。
	% 	取余 						`expr $b % $a` 结果为 0。
	= 	赋值 						a=$b 将把变量 b 的值赋给 a。
	== 	相等。用于比较两个数字，相同则返回 true。 	[ $a == $b ] 返回 false。
	!= 	不相等。用于比较两个数字，不相同则返回 true。 	[ $a != $b ] 返回 true。
	注意：需要加空格！
	------------------------
	关系运算符：
	下表列出了常用的关系运算符，假定变量 a 为 10，变量 b 为 20：
	-eq 	检测两个数是否相等，相等返回 true。 			[ $a -eq $b ] 返回 false。
	-ne 	检测两个数是否相等，不相等返回 true。 			[ $a -ne $b ] 返回 true。
	-gt 	检测左边的数是否大于右边的，如果是，则返回 true。 	[ $a -gt $b ] 返回 false。
	-lt 	检测左边的数是否小于右边的，如果是，则返回 true。 	[ $a -lt $b ] 返回 true。
	-ge 	检测左边的数是否大于等于右边的，如果是，则返回 true。 	[ $a -ge $b ] 返回 false。
	-le 	检测左边的数是否小于等于右边的，如果是，则返回 true。 	[ $a -le $b ] 返回 true。
	-------------------------
	布尔运算符：
	下表列出了常用的布尔运算符，假定变量 a 为 10，变量 b 为 20：
	运算符 	说明 	举例
	! 	非运算，表达式为 true 则返回 false，否则返回 true。 	[ ! false ] 返回 true。
	-o 	或运算，有一个表达式为 true 则返回 true。 	[ $a -lt 20 -o $b -gt 100 ] 返回 true。
	-a 	与运算，两个表达式都为 true 才返回 true。 	[ $a -lt 20 -a $b -gt 100 ] 返回 false。

	----------------------------
	逻辑运算符：
	以下介绍 Shell 的逻辑运算符，假定变量 a 为 10，变量 b 为 20:
	运算符 	说明 	举例
	&& 	逻辑的 AND 	[[ $a -lt 100 && $b -gt 100 ]] 返回 false
	|| 	逻辑的 OR 	[[ $a -lt 100 || $b -gt 100 ]] 返回 true
	-----------------------------
	
